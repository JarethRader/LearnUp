version: "3.7"
services:
  traefik:
    image: "traefik:v2.4"
    restart: unless-stopped
    container_name: "traefik"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./traefik.toml:/etc/traefik/traefik.toml
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-global-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`monitor.phonics-learningboard.jarethrader.com`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=admin:$apr1$R/eo9zLd$FZPB6dMiN6iwPYYH3oULw0
  client:
    container_name: learnup_react
    image: learnup_react:dev
    restart: always
    build:
      context: ./client
      dockerfile: ./Dockerfile
    # ports:
    #   - "80:80"
    volumes:
      - ./client:/app
      - /app/node_modules/
    labels:
      - traefik.enable=true
      - traefik.http.routers.client.rule=Host(`client.phonics-learningboard.jarethrader.com`)
      - traefik.http.routers.client.entrypoints=websecure
      - traefik.http.routers.client.tls.certresolver=letsencrypt
      - traefik.port=8080
    networks:
      - traefik-global-proxy
      - backend
  mongo:
    container_name: learnup_mongo
    image: "mongo:latest"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=sSqZ9B3E8aL4
      - MONGODB_INITDB_DATABASE=Users
    # ports:
    #   - 27017:27017
    networks:
      - backend
    labels:
      - traefik.enable=false
    # volumes:
    #   - mongodb-data:/data/db
  redis:
    container_name: learnup_redis
    image: "redis:latest"
    command: redis-server --requirepass t8Hpb5TzPv5Q
    # ports:
    #   - 6379:6379
    networks:
      - backend
    labels:
      - traefik.enable=false
  user:
    container_name: learnup_user
    image: learnup_user:dev
    restart: always
    build:
      context: ./API/UserMicroservice
      dockerfile: ./Dockerfile
    environment:
      - PUBLIC_PATH=phonics-learningboard.jarethrader
    depends_on:
      - mongo
      - redis
    links:
      - mongo
      - redis
    # ports:
    #   - "5000:5000"
    volumes:
      - ./API/UserMicroservice:/usr/src/app
      - /usr/src/app/node_modules/
    labels:
      - traefik.enable=true
      - traefik.http.routers.user.rule=Host(`api.user.phonics-learningboard.jarethrader.com`)
      - traefik.http.routers.user.entrypoints=websecure
      - traefik.http.routers.user.tls.certresolver=letsencrypt
    networks:
      - traefik-global-proxy
      - backend
  postgres:
    container_name: learnup_postgres
    image: "postgres"
    environment:
      - POSTGRES_USER=learnup_user
      - POSTGRES_PASSWORD=qdDv5RPyYSgS
      - POSTGRES_DB=Learnup
    # ports:
    #   - "5432:5432"
    networks:
      - backend
    labels:
      - traefik.enable=false
    # volumes:
    #   - postgres-data:/var/lib/postgresql/data/
  whiteboard:
    container_name: learnup_whiteboard
    image: learnup_whiteboard:dev
    restart: always
    build:
      context: ./API/WhiteboardMicroservice
      dockerfile: ./Dockerfile
    environment:
      - PUBLIC_PATH=phonics-learningboard.jarethrader
    depends_on:
      - postgres
    # ports:
    #   - "5001:5001"
    volumes:
      - ./API/WhiteboardMicroservice:/usr/src/app
      - /usr/src/app/node_modules/
    labels:
      - traefik.enable=true
      - traefik.http.routers.whiteboard.rule=Host(`api.whiteboard.phonics-learningboard.jarethrader.com`)
      - traefik.http.routers.whiteboardwhiteboard.entrypoints=websecure
      - traefik.http.routers.whiteboard.tls.certresolver=letsencrypt
    networks:
      - traefik-global-proxy
      - backend
  audio:
    container_name: learnup_audio
    image: learnup_audio:dev
    restart: always
    environment:
      - PUBLIC_PATH=phonics-learningboard.jarethrader
    build:
      context: ./API/audioMicroservice
      dockerfile: ./Dockerfile
    # ports:
    #   - "5002:5002"
    volumes:
      - ./API/audioMicroservice:/usr/src/app
      - /usr/src/app/node_modules/
    labels:
      - traefik.enable=true
      - traefik.http.routers.audio.rule=Host(`api.audio.phonics-learningboard.jarethrader.com`)
      - traefik.http.routers.audio.entrypoints=websecure
      - traefik.http.routers.audio.tls.certresolver=letsencrypt
    networks:
      - traefik-global-proxy
      - backend
  signalling:
    container_name: learnup_webrtc_signalling
    image: learnup_webrtc_signalling:dev
    restart: always
    build:
      context: ./API/signallingServer
      dockerfile: ./Dockerfile
    # ports:
    #   - "8081:8081"
    volumes:
      - ./API/signallingServer:/user/src/app
      - /usr/src/app/node_modules/
    labels:
      - traefik.enable=true
      - traefik.http.routers.signalling.rule=Host(`api.signalling.phonics-learningboard.jarethrader.com`)
      - traefik.http.routers.signalling.entrypoints=websecure
      - traefik.http.routers.signalling.tls.certresolver=letsencrypt
    networks:
      - traefik-global-proxy
      - backend

# volumes:
#   postgres-data:
#   mongodb-data:

networks:
  traefik-global-proxy:
    name: "traefik-global-proxy"
    external: true
  backend:
