version: "3.9"
services:
  client:
    container_name: learnup_react
    image: learnup_react:${DEPLOY_ENV}
    restart: always
    build:
      context: ./client
      dockerfile: ./Dockerfile
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    volumes:
      - ./client:/app
      - /app/node_modules/
    environment:
      - CHOKIDAR_USEPOLLING=true
      # don't need to name it XXX_PORT
      # because each container is individual
      - PORT=${CLIENT_PORT}
  mongo:
    container_name: learnup_mongo
    image: "mongo:latest"
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    command: mongod --port ${MONGO_PORT}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    # volumes:
    #   - mongodb-data:/data/db
  redis:
    container_name: learnup_redis
    image: "redis:latest"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
  user:
    container_name: learnup_user
    image: learnup_user:${DEPLOY_ENV}
    restart: always
    build:
      context: ./API/UserMicroservice
      dockerfile: ./Dockerfile
    depends_on:
      - mongo
      - redis
    environment:
      - MONGO_URI=${MONGO_URI}
      - PUBLIC_PATH=${PUBLIC_PATH}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SESS_LIFETIME=${SESS_LIFETIME}
      - SESS_SECRET=${SESS_SECRET}
      - SESS_NAME=${SESS_NAME}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - PORT=${USER_PORT}
    ports:
      - ${USER_PORT}:${USER_PORT}
    volumes:
      - ./API/UserMicroservice:/usr/src/app
      - /usr/src/app/node_modules/
  postgres:
    container_name: learnup_postgres
    image: "postgres"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    command: -p ${POSTGRES_PORT}
    # volumes:
    #   - postgres-data:/var/lib/postgresql/data/
  whiteboard:
    container_name: learnup_whiteboard
    image: learnup_whiteboard:${DEPLOY_ENV}
    restart: always
    build:
      context: ./API/WhiteboardMicroservice
      dockerfile: ./Dockerfile
    depends_on:
      - postgres
    environment:
      - POSTGRES_URI=${POSTGRES_URI} 
      - PUBLIC_PATH=${PUBLIC_PATH} 
      - SESS_LIFETIME=${SESS_LIFETIME}
      - SESS_SECRET=${SESS_SECRET}
      - SESS_NAME=${SESS_NAME}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - PORT=${WHITEBOARD_PORT}
    ports:
      - ${WHITEBOARD_PORT}:${WHITEBOARD_PORT}
    volumes:
      - ./API/WhiteboardMicroservice:/usr/src/app
      - /usr/src/app/node_modules/
  audio:
    container_name: learnup_audio
    image: learnup_audio:${DEPLOY_ENV}
    restart: always
    build:
      context: ./API/AudioMicroservice
      dockerfile: ./Dockerfile
    ports:
      - ${AUDIO_PORT}:${AUDIO_PORT}
    volumes:
      - ./API/AudioMicroservice:/usr/src/app
      - /usr/src/app/node_modules/
  signalling:
    container_name: learnup_webrtc_signalling
    image: learnup_webrtc_signalling:${DEPLOY_ENV}
    restart: always
    build:
      context: ./API/signallingServer
      dockerfile: ./Dockerfile
    ports:
      - ${SIGNAL_PORT}:${SIGNAL_PORT}
    volumes:
      - ./API/signallingServer:/user/src/app
      - /usr/src/app/node_modules/
# volumes:
#   postgres-data:
#   mongodb-data:
